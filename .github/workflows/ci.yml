name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  api-and-web-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          ls -la
          echo "---- apps/api ----"
          ls -la apps/api || true
          echo "---- apps/web ----"
          ls -la apps/web || true

      # ===== API (Python) =====
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: apps/api/requirements.txt

      - name: Install API deps
        working-directory: ./apps/api
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: API sanity import
        working-directory: ./apps/api
        run: python -c "import fastapi, sqlmodel; print('FastAPI OK; SQLModel OK')"

      # ===== Web (Node/Vite) =====
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/web/package-lock.json

      - name: Install Web deps (ci if lockfile, otherwise install)
        working-directory: ./apps/web
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            echo "package-lock.json não encontrado; rodando npm install (sem cache)…"
            npm install
          fi

      - name: Build Web (Vite)
        working-directory: ./apps/web
        env:
          VITE_API_BASE: "http://localhost:8000"
        run: npm run build

      # ===== Docker build smoke =====
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image
        working-directory: ./apps/api
        run: docker build -t clarus-api-ci .

      - name: Build Web image
        working-directory: ./apps/web
        run: docker build -t clarus-web-ci .